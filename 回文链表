题目：
请判断一个链表是否为回文链表。

示例 1:

输入: 1->2
输出: false
示例 2:

输入: 1->2->2->1
输出: true


bool isPalindrome(struct ListNode* head){
    struct ListNode *p=head;
    int len=0;
    
    while(p){//遍历链表获得链表的长度
        p=p->next;
        len++;
    }
    if(head==NULL)
        return true;
    if(len==1)
        return true;
    if(len==2){
        if(head->val==head->next->val)
            return true;
        else
            return false;
    }
    if(len==3){
        if(head->val==head->next->next->val)
            return true;
        else
            return false;
    }
    
    struct ListNode *t=head;//t为后端链表的表头
    int n=(len-1)/2,flag=0;//flag用来判断链表的长度是奇数还是偶数
    if(len%2==1)
        flag=1;
    len=(len+1)/2;
    while(len){
        t=t->next;
        len--;
    }
    struct ListNode *q=head,*r=head->next->next;
    p=head->next,q->next=NULL;
    while(n){//将前半段链表反转
        p->next=q;
        q=p;
        p=r;
        r=r->next;
        n--;
    }
    if(flag==1)
      q=q->next;
    while(t){
        if(q->val!=t->val)
            return false;
        q=q->next;
        t=t->next;
    }
    return true;

}
