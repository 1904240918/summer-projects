题目：
假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

搜索一个给定的目标值，如果数组中存在这个目标值，则返回它的索引，否则返回 -1 。

你可以假设数组中不存在重复的元素。

你的算法时间复杂度必须是 O(log n) 级别。

int search(int* nums, int numsSize, int target){
    int a=0,b=numsSize-1,mid;

    while(a<=b){
        mid=(a+b)/2;
        if(nums[mid]==target)
            return mid;
        if(nums[a]<=nums[mid]){//如果nums[0]<=nums[mid]说明在中间值的左边是有序排列
            if(target>=nums[a]&&target<nums[mid])//寻找目标值看是否在左边的有序数组中
                b=mid-1;
            else
                a=mid+1;
        }
        else{//否则说明中间值的右边是有序排列
            if(target<=nums[b]&&target>nums[mid])//寻找目标值看是否在右边的有序数组中
                a=mid+1;
            else
                b=mid-1;
        }
    }

    return -1;
}
